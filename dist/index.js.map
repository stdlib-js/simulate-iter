{
  "version": 3,
  "sources": ["../lib/index.js"],
  "sourcesContent": ["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2019 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/*\n* When adding modules to the namespace, ensure that they are added in alphabetical order according to module name.\n*/\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils-define-read-only-property' );\n\n\n// MAIN //\n\n/**\n* Top-level namespace.\n*\n* @namespace ns\n*/\nvar ns = {};\n\n/**\n* @name iterawgn\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/simulate/iter/awgn}\n*/\nsetReadOnly( ns, 'iterawgn', require( '@stdlib/simulate-iter-awgn' ) );\n\n/**\n* @name iterawln\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/simulate/iter/awln}\n*/\nsetReadOnly( ns, 'iterawln', require( '@stdlib/simulate-iter-awln' ) );\n\n/**\n* @name iterawun\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/simulate/iter/awun}\n*/\nsetReadOnly( ns, 'iterawun', require( '@stdlib/simulate-iter-awun' ) );\n\n/**\n* @name iterBartlettHannPulse\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/simulate/iter/bartlett-hann-pulse}\n*/\nsetReadOnly( ns, 'iterBartlettHannPulse', require( '@stdlib/simulate-iter-bartlett-hann-pulse' ) );\n\n/**\n* @name iterBartlettPulse\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/simulate/iter/bartlett-pulse}\n*/\nsetReadOnly( ns, 'iterBartlettPulse', require( '@stdlib/simulate-iter-bartlett-pulse' ) );\n\n/**\n* @name iterCosineWave\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/simulate/iter/cosine-wave}\n*/\nsetReadOnly( ns, 'iterCosineWave', require( '@stdlib/simulate-iter-cosine-wave' ) );\n\n/**\n* @name iterDiracComb\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/simulate/iter/dirac-comb}\n*/\nsetReadOnly( ns, 'iterDiracComb', require( '@stdlib/simulate-iter-dirac-comb' ) );\n\n/**\n* @name iterFlatTopPulse\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/simulate/iter/flat-top-pulse}\n*/\nsetReadOnly( ns, 'iterFlatTopPulse', require( '@stdlib/simulate-iter-flat-top-pulse' ) );\n\n/**\n* @name iterHannPulse\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/simulate/iter/hann-pulse}\n*/\nsetReadOnly( ns, 'iterHannPulse', require( '@stdlib/simulate-iter-hann-pulse' ) );\n\n/**\n* @name iterLanczosPulse\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/simulate/iter/lanczos-pulse}\n*/\nsetReadOnly( ns, 'iterLanczosPulse', require( '@stdlib/simulate-iter-lanczos-pulse' ) );\n\n/**\n* @name iterPeriodicSinc\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/simulate/iter/periodic-sinc}\n*/\nsetReadOnly( ns, 'iterPeriodicSinc', require( '@stdlib/simulate-iter-periodic-sinc' ) );\n\n/**\n* @name iterPulse\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/simulate/iter/pulse}\n*/\nsetReadOnly( ns, 'iterPulse', require( '@stdlib/simulate-iter-pulse' ) );\n\n/**\n* @name iterSawtoothWave\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/simulate/iter/sawtooth-wave}\n*/\nsetReadOnly( ns, 'iterSawtoothWave', require( '@stdlib/simulate-iter-sawtooth-wave' ) );\n\n/**\n* @name iterSineWave\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/simulate/iter/sine-wave}\n*/\nsetReadOnly( ns, 'iterSineWave', require( '@stdlib/simulate-iter-sine-wave' ) );\n\n/**\n* @name iterSquareWave\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/simulate/iter/square-wave}\n*/\nsetReadOnly( ns, 'iterSquareWave', require( '@stdlib/simulate-iter-square-wave' ) );\n\n/**\n* @name iterTriangleWave\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/simulate/iter/triangle-wave}\n*/\nsetReadOnly( ns, 'iterTriangleWave', require( '@stdlib/simulate-iter-triangle-wave' ) );\n\n\n// EXPORTS //\n\nmodule.exports = ns;\n"],
  "mappings": "aA0BA,IAAIA,EAAc,QAAS,yCAA0C,EAUjEC,EAAK,CAAC,EASVD,EAAaC,EAAI,WAAY,QAAS,4BAA6B,CAAE,EASrED,EAAaC,EAAI,WAAY,QAAS,4BAA6B,CAAE,EASrED,EAAaC,EAAI,WAAY,QAAS,4BAA6B,CAAE,EASrED,EAAaC,EAAI,wBAAyB,QAAS,2CAA4C,CAAE,EASjGD,EAAaC,EAAI,oBAAqB,QAAS,sCAAuC,CAAE,EASxFD,EAAaC,EAAI,iBAAkB,QAAS,mCAAoC,CAAE,EASlFD,EAAaC,EAAI,gBAAiB,QAAS,kCAAmC,CAAE,EAShFD,EAAaC,EAAI,mBAAoB,QAAS,sCAAuC,CAAE,EASvFD,EAAaC,EAAI,gBAAiB,QAAS,kCAAmC,CAAE,EAShFD,EAAaC,EAAI,mBAAoB,QAAS,qCAAsC,CAAE,EAStFD,EAAaC,EAAI,mBAAoB,QAAS,qCAAsC,CAAE,EAStFD,EAAaC,EAAI,YAAa,QAAS,6BAA8B,CAAE,EASvED,EAAaC,EAAI,mBAAoB,QAAS,qCAAsC,CAAE,EAStFD,EAAaC,EAAI,eAAgB,QAAS,iCAAkC,CAAE,EAS9ED,EAAaC,EAAI,iBAAkB,QAAS,mCAAoC,CAAE,EASlFD,EAAaC,EAAI,mBAAoB,QAAS,qCAAsC,CAAE,EAKtF,OAAO,QAAUA",
  "names": ["setReadOnly", "ns"]
}
